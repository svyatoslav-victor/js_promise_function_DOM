{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","once","printMessage","message","body","document","querySelector","notification","createElement","classList","add","innerHTML","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EACdD,8BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GADrC,OAEC,CAAEC,MAAM,MAIf,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAOC,SAASC,cAAc,QAC9BC,EAAeF,SAASG,cAAc,OAE5CD,EAAaE,UAAUC,IAAI,WAC3BH,EAAaI,UAAYR,EACzBC,EAAKQ,YAAYL,IAGnBM,OAAOC,QAAU,CACfrB,QAAAA,EACAS,aAAAA","file":"main.95c96b9e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nfunction waitFor(element, eventName) {\r\n  return new Promise(resolve => {\r\n    element.addEventListener(eventName, () => {\r\n      resolve(`It was ${eventName} on the element:\r\n        ${element.nodeName}, id: ${element.id}.`);\r\n    }, { once: true });\r\n  });\r\n}\r\n\r\nconst printMessage = (message) => {\r\n  const body = document.querySelector('body');\r\n  const notification = document.createElement('div');\r\n\r\n  notification.classList.add('message');\r\n  notification.innerHTML = message;\r\n  body.appendChild(notification);\r\n};\r\n\r\nmodule.exports = {\r\n  waitFor,\r\n  printMessage,\r\n};\r\n"]}